/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.56
 * Generated at: 2014-11-05 07:51:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex1_005fbody_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/ex1_top.jsp", Long.valueOf(1415087843864L));
    _jspx_dependants.put("/ex1_bottom.jsp", Long.valueOf(1415067441611L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"style/style.css\" type=\"text/css\">\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-migrate-1.2.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<header class=\"hd\">\r\n");
      out.write("\t\t<h1>Include 연습</h1>\r\n");
      out.write("\t\t<h2>include 지시자의 top.jsp영역</h2>\r\n");
      out.write("\t\t");

			if(session.getAttribute("MEMBERID")!=null){
				String username = (String) session.getAttribute("USERNAME");
		
      out.write("\r\n");
      out.write("\t\t\t<h2 style=\"color:yellow; font-size:13pt\">");
      out.print(username );
      out.write("님 반갑습니다. ^^</h2>\r\n");
      out.write("\t\t");
		
			}
		
      out.write("\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<nav>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><a href=\"ex1_body.jsp\">홈</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t");

				String menu1= "";
				String menu2 = "";
				//세션의 유무 판단
				if(session.getAttribute("MEMBERID")==null){
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"join.jsp\">회원가입</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"loginForm.jsp\">로그인</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t");

				}else{
			
      out.write("\r\n");
      out.write("\t\t\t\t\t<li><a href=\"mypage.jsp\">마이페이지</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t\t\t<li><a href=\"LogOut.jsp\">로그아웃</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<li><a href=\"\">게시판</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">메뉴1</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">메뉴2</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">메뉴3</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</nav>");
      out.write("\r\n");
      out.write("<article>\r\n");
      out.write("\t\t\t<header>\r\n");
      out.write("\t\t\t\t<h2>여기는 웹페이지 영역1</h2>\r\n");
      out.write("\t\t\t</header>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<p>Apps provide multiple entry points Android apps are built as a\r\n");
      out.write("\t\t\t\tcombination of distinct components that can be invoked individually.\r\n");
      out.write("\t\t\t\tFor instance, an individual activity provides a single screen for a\r\n");
      out.write("\t\t\t\tuser interface, and a service independently performs work in the\r\n");
      out.write("\t\t\t\tbackground. From one component you can start another component using\r\n");
      out.write("\t\t\t\tan intent. You can even start a component in a different app, such\r\n");
      out.write("\t\t\t\tan activity in a maps app to show an address. This model provides\r\n");
      out.write("\t\t\t\tmultiple entry points for a single app and allows any app to behave\r\n");
      out.write("\t\t\t\tas a user's \"default\" for an action that other apps may invoke.</p>\r\n");
      out.write("\t\t\t<section>\r\n");
      out.write("\t\t\t\t<header>\r\n");
      out.write("\t\t\t\t\t<h2>여기는 웹페이지 영역2</h2>\r\n");
      out.write("\t\t\t\t</header>\r\n");
      out.write("\t\t\t\t<p>Apps adapt to different devices Android provides an adaptive\r\n");
      out.write("\t\t\t\t\tapp framework that allows you to provide unique resources for\r\n");
      out.write("\t\t\t\t\tdifferent device configurations. For example, you can create\r\n");
      out.write("\t\t\t\t\tdifferent XML layout files for different screen sizes and the\r\n");
      out.write("\t\t\t\t\tsystem determines which layout to apply based on the current\r\n");
      out.write("\t\t\t\t\tdevice's screen size. You can query the availability of device\r\n");
      out.write("\t\t\t\t\tfeatures at runtime if any app features require specific hardware\r\n");
      out.write("\t\t\t\t\tsuch as a camera. If necessary, you can also declare features your\r\n");
      out.write("\t\t\t\t\tapp requires so app markets such as Google Play Store do not allow\r\n");
      out.write("\t\t\t\t\tinstallation on devices that do not support that feature.</p>\r\n");
      out.write("\t\t\t</section>\r\n");
      out.write("\t\t</article>\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("\t<nav>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li><a href=\"\">회사주소</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">이용약관</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">회사약도</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">임원정보</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">개인정보정책</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">제휴회사</a>&nbsp; |</li>\r\n");
      out.write("\t\t\t<li><a href=\"\">사이트맵</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</nav>\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
